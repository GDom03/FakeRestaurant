version: "3.8"

services:
  fake_restaurant_db:
    image: postgres:15
    container_name: fake_restaurant_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: fake_restaurant_db
    ports:
      - '5432:5432'
    volumes:
      - ./Database/postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username admin --dbname fake_restaurant_db"]
      interval: 5s
      timeout: 5s
      retries: 50
    networks:
      fake_restaurant_network:
        ipv4_address: 172.28.0.2

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    depends_on:
      - fake_restaurant_db
    volumes:
      - ./PgAdmin/pgadmin_data:/var/lib/pgadmin
    networks:
      fake_restaurant_network:
        ipv4_address: 172.28.0.3

  fake_restaurant_cloud:
    image: minio/minio
    container_name: fake_restaurant_cloud
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./MinIO/minio-data:/data
    networks:
      fake_restaurant_network:
        ipv4_address: 172.28.0.4

  backend:
    build: ../Backend 
    container_name: fake_restaurant_server
    ports:
      - '3000:3000' 
    environment:
      DB_CONNECTION_URI: "postgres://admin:admin@fake_restaurant_db:5432/fake_restaurant_db"
      DIALECT: "postgres"
      TOKEN_SECRET: "V3RY_S3CR37_T0K3N"
    depends_on:
      fake_restaurant_db:
        condition: service_healthy
      fake_restaurant_cloud:
        condition: service_started
    command: "npm start"
    networks:
      fake_restaurant_network:
        ipv4_address: 172.28.0.5

volumes:
  postgres_data:
  pgadmin_data:
  minio-data:

networks:
  fake_restaurant_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
